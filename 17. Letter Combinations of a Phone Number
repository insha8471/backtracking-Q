Time compelxity : O(4^n)

class Solution {
    public void helper(String digits, List<String> res, int idx, String[] mp, StringBuilder sb){
        if(idx >= digits.length()){
            res.add(sb.toString());
            return;
        }
        char ch = digits.charAt(idx);
        int number = ch - '0';
        String value = mp[number];

        for(int i=0;i<value.length();i++){
            sb.append(value.charAt(i));
            helper(digits, res,idx+1,mp, sb);
            sb.setLength(sb.length()-1);
        }
    }
    public List<String> letterCombinations(String digits) {
        String[] map = {"","","abc", "def","ghi","jkl", "mno","pqrs","tuv", "wxyz"};
        List<String> res = new ArrayList<>();
        if(digits.length() == 0){
            return res;
        }

        helper(digits, res, 0, map, new StringBuilder());
        return res;
    }
}
